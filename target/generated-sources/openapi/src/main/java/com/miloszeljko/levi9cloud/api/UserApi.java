/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.3.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.miloszeljko.levi9cloud.api;

import java.math.BigDecimal;
import com.miloszeljko.levi9cloud.model.CostsDto;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2021-12-07T15:28:06.610622400+01:00[Europe/Belgrade]")
@Validated
@Api(value = "user", description = "the user API")
public interface UserApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /user/{userId}/costs
     * Calculate and retrieve all costs
     *
     * @param userId  (required)
     * @param serviceTypes  (optional)
     * @param untilDate  (optional)
     * @return  (status code 200)
     */
    @ApiOperation(value = "", nickname = "cloudPricingControllerGetCosts", notes = "Calculate and retrieve all costs", response = CostsDto.class, tags={ "Cloud-Pricing", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "", response = CostsDto.class) })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/user/{userId}/costs",
        produces = { "application/json" }
    )
    default ResponseEntity<CostsDto> _cloudPricingControllerGetCosts(@ApiParam(value = "", required = true) @PathVariable("userId") BigDecimal userId,@ApiParam(value = "") @Valid @RequestParam(value = "serviceTypes", required = false) List<String> serviceTypes,@ApiParam(value = "") @Valid @RequestParam(value = "untilDate", required = false) BigDecimal untilDate) {
        return cloudPricingControllerGetCosts(userId, serviceTypes, untilDate);
    }

    // Override this method
    default  ResponseEntity<CostsDto> cloudPricingControllerGetCosts(BigDecimal userId, List<String> serviceTypes, BigDecimal untilDate) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"totalCosts\" : 6.027456183070403, \"userId\" : 0.8008281904610115, \"costsPerService\" : [ { \"serviceType\" : \"FUNC\", \"cost\" : 1.4658129805029452 }, { \"serviceType\" : \"FUNC\", \"cost\" : 1.4658129805029452 } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
