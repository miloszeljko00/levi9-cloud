/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.3.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.miloszeljko.levi9cloud.api;

import com.miloszeljko.levi9cloud.model.ActionDto;
import java.util.List;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2021-12-07T15:28:06.610622400+01:00[Europe/Belgrade]")
@Validated
@Api(value = "actions", description = "the actions API")
public interface ActionsApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /actions
     * Store lists of actions
     *
     * @param actionDto  (required)
     * @return List of actions successfully stored (status code 200)
     */
    @ApiOperation(value = "", nickname = "cloudPricingControllerStore", notes = "Store lists of actions", tags={ "Cloud-Pricing", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "List of actions successfully stored") })
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/actions",
        consumes = { "application/json" }
    )
    default ResponseEntity<Void> _cloudPricingControllerStore(@ApiParam(value = "", required = true) @Valid @RequestBody List<ActionDto> actionDto) {
        return cloudPricingControllerStore(actionDto);
    }

    // Override this method
    default  ResponseEntity<Void> cloudPricingControllerStore(List<ActionDto> actionDto) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
